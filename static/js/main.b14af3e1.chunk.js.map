{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","scr","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b14af3e1.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer,\n     initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\n    term: null,\n};\n\nexport const actionTypes = {\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n};\n\nconst reducer= (state, action) => {\n    console.log(action);\n\n    switch (action.type) {\n        case actionTypes.SET_SEARCH_TERM:\n            return {\n                ...state,\n                term: action.term,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React, { useState } from 'react'\nimport './Search.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\n\nfunction Search({ hideButtons = false }) {\n    const [{}, dispatch] = useStateValue();\n    \n    const [input, setInput] = useState(\"\");\n    const history = useHistory();\n\n    const search = (e) => {\n        e.preventDefault();\n\n        console.log('you gotit >>', input)\n\n        dispatch({\n          type: actionTypes.SET_SEARCH_TERM,\n          term: input\n        })\n\n        history.push('/search')\n    };\n\n    return (\n        <form className=\"search\">\n            <div className=\"search__input\">\n             <SearchIcon className=\"search__inputIcon\"/>\n             <input value={input} onChange={e => setInput(e.target.\n             value)} />\n             <MicIcon />\n            </div>\n\n            {!hideButtons ? (\n                <div className=\"search__buttons\">\n            <Button type='submit' onClick={search} \n            variant=\"outlined\">\n            Google Search\n            </Button>\n            <Button variant=\"outlined\">I'M FEELING LUCKY</Button>\n            </div>\n            ): (\n                <div className=\"search__buttons\">\n            <Button className=\"search__buttonsHidden\" \n            type='submit' onClick={search} \n            variant=\"outlined\">\n            Google Search\n            </Button>\n            <Button className=\"search__buttonsHidden\" variant=\"outlined\">I'M FEELING LUCKY</Button>\n            </div>\n            )}\n\n        </form>\n    );\n}\n\nexport default Search\n","import React from 'react'\nimport './Home.css'\nimport { Link } from \"react-router-dom\"\nimport AppsIcon from '@material-ui/icons/Apps';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Search from './Search'\n\nfunction Home() {\n    return (\n        <div className=\"home\">        \n        <div className=\"home__header\">\n        <div className='home__headerLeft'>\n          <Link to='/about'>About</Link>\n          <Link to='/store'>Store</Link>\n        </div>\n        <div className='home__headerRight'>\n        <Link to='/gmail'>Gmail</Link>\n        <Link to='/images'>Images</Link>\n        <AppsIcon/>\n        <AccountCircleIcon/>\n        </div>\n            \n        </div>\n\n        <div className=\"home__body\">\n            <img\n              src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"\n              alt=\"\"\n            />\n            <div className=\"home__inputContainer\">\n                 <Search /> \n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Home\n","import { useState, useEffect } from 'react';\nimport API_KEY from \"./keys\";\n\nconst CONTEXT_KEY = \"541238d1b1b1f2a5a\";\n\nconst useGoogleSearch = (term) => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async() => {\n            fetch(\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\n            )\n            .then(response => response.json())\n            .then(result => {\n                setData(result)\n            })\n        }\n\n        fetchData();\n    }, [term])\n\n    return { data }\n};\n\nexport default useGoogleSearch;\n","export const API_KEY = \"AIzaSyDxZK6VGssqZsfsaknf90AqjiqXpb1jYpI\";\n\nexport default API_KEY;","import React from 'react'\nimport './SearchPage.css'\nimport { useStateValue } from \"./StateProvider\";\nimport useGoogleSearch from './useGoogleSearch';\nimport Response from \"./response\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport RoomIcon from '@material-ui/icons/Room';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nfunction SearchPage() {\n    const [{ term }, dispatch] = useStateValue();\n    const { data } = useGoogleSearch(term);\n     // const data = Response;\n\n    console.log(data)\n    return (\n        <div className='searchPage'>\n            <div className='searchPage__header'>\n            <Link to=\"/\">\n                <img \n                className=\"searchPage__logo\"\n                src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"\n                alt=\"\"\n                 />\n            </Link>\n\n            <div className='searchPage__headerBody'>\n             <Search hideButtons/>\n\n             <div className='searchPage__options'>\n             <div className=\"searchPage__optionsLeft\">\n             <div className=\"searchPage__option\">\n             <SearchIcon/>\n               <Link to=\"/all\">All</Link>\n             </div>\n             <div className=\"searchPage__option\">\n               <DescriptionIcon />\n               <Link to=\"/news\">News</Link>\n             </div>\n             <div className=\"searchPage__option\">\n              <ImageIcon />\n              <Link to=\"/images\">Image</Link>\n             </div>\n             <div className=\"searchPage__option\">\n              <LocalOfferIcon/>\n              <Link to=\"/shopping\">shopping</Link>\n             </div>\n             <div className=\"searchPage__option\">\n             <RoomIcon />\n             <Link to=\"/maps\">maps</Link>\n             </div>\n             <div className=\"searchPage__option\">\n             <MoreVertIcon/>\n             <Link to=\"/more\">more</Link>\n             </div>\n             </div>\n\n            <div className=\"searchPage__optionsRight\">\n            <div className=\"searchPage__option\">\n                <Link to=\"/settings\">Settings</Link>\n            </div>\n            <div className=\"searchPage__option\">\n             <Link to=\"/tools\">Tools</Link>\n            </div>\n            </div>\n            </div>\n            </div>\n             </div>\n\n             {term && (\n                <div\n                 className='searchPage__results'>\n                 <p className='searchPage__resultCount'>\n                 About {data?.searchInformation.\n                 formattedTotalResults}results\n                 ({data?.searchInformation.\n                 formattedSearchTime} seconds) \n                  for {term}\n                 </p>\n\n                 {data?.items.map(item => (\n                     <div \n                     className='searchPage__result'>\n                         <a\n                         className=\"searchPage__resul\n                         tLink\"href={item.link}>\n                           {item.pagemap?.cse_image?.\n                           length > 0 && \n                           item.pagemap?.cse_image\n                           [0]?.scr && (\n                               <img\n                                   className=\"searchPage\n                                   __resultImage\"\n                                   src={\n                                       item.pagemap?.\n                                       cse_image?.length\n                                       > 0 &&\n                                       item.pagemap?.\n                                       cse_image[0]?.src\n                                       }\n                                   alt=\"\"\n                               />\n                           )}\n\n                         {item.displayLink}\n                         </a>\n                         <a \n                         className='searchPage__resultTitle'\n                          href={item.link}>\n                         <h1>{item.title}</h1>\n                         </a>\n                         <p \n                         className='searchPage__resultSnippet'>{item.snippet}</p>\n                     </div>\n                 ))}\n            </div>\n             )}\n\n        </div>\n    )\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SearchPage from './SearchPage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      \n      <Router>\n      <Switch>\n     <Route path=\"/search\">\n     <SearchPage />\n     </Route>\n     <Route path=\"/\">\n     <Home/>\n     </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <StateProvider initialState={initialState} reducer={reducer}>\n   <App />\n   </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}